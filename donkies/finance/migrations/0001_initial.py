# -*- coding: utf-8 -*-
# Generated by Django 1.10.3 on 2017-04-03 13:19
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, editable=False)),
                ('guid', models.CharField(max_length=100, unique=True)),
                ('plaid_id', models.CharField(max_length=255)),
                ('name', models.CharField(help_text='Set by user or institution', max_length=255)),
                ('official_name', models.CharField(help_text='The official name given by the financial institution.', max_length=255)),
                ('balances', django.contrib.postgres.fields.jsonb.JSONField(default=None, null=True)),
                ('mask', models.CharField(help_text='Last 4 digits of account number', max_length=4)),
                ('subtype', models.CharField(choices=[('depository', 'depository'), ('credit', 'credit'), ('loan', 'loan'), ('mortgage', 'mortgage'), ('brokerage', 'brokerage'), ('other', 'other')], default=None, max_length=255, null=True)),
                ('type', models.CharField(choices=[('depository', 'depository'), ('credit', 'credit'), ('loan', 'loan'), ('mortgage', 'mortgage'), ('brokerage', 'brokerage'), ('other', 'other')], default=None, max_length=100, null=True)),
                ('type_ds', models.CharField(choices=[('debit', 'debit'), ('debt', 'debt'), ('other', 'other')], default='other', help_text='Internal type', max_length=15)),
                ('transfer_share', models.IntegerField(default=0, help_text='For debt accounts in percentage. Share of transfer amount between debt accounts.The total share of all accounts should be 100%.')),
                ('is_funding_source_for_transfer', models.BooleanField(default=False, help_text='For debit account. Funding source for transfer.')),
                ('account_number', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('routing_number', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('wire_routing', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(default=None, null=True)),
            ],
            options={
                'verbose_name_plural': 'accounts',
                'verbose_name': 'account',
                'ordering': ['type_ds', 'item', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plaid_id', models.CharField(max_length=100, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('has_mfa', models.BooleanField(default=False)),
                ('mfa', django.contrib.postgres.fields.jsonb.JSONField(default=None, null=True)),
                ('credentials', django.contrib.postgres.fields.jsonb.JSONField(default=None, null=True)),
                ('products', django.contrib.postgres.fields.jsonb.JSONField(default=None, null=True)),
                ('sort', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name_plural': 'institutions',
                'verbose_name': 'institution',
                'ordering': ['sort', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plaid_id', models.CharField(max_length=255, unique=True)),
                ('access_token', models.CharField(max_length=255, unique=True)),
                ('request_id', models.CharField(max_length=100)),
                ('webhook', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('available_products', django.contrib.postgres.fields.jsonb.JSONField(default=None, null=True)),
                ('billed_products', django.contrib.postgres.fields.jsonb.JSONField(default=None, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='finance.Institution')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'items',
                'verbose_name': 'item',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LinkDebt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('share', models.IntegerField(default=0)),
                ('account', models.ForeignKey(help_text='Debt account', on_delete=django.db.models.deletion.CASCADE, to='finance.Account')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'link debts',
                'verbose_name': 'link debt',
                'ordering': ['user'],
            },
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, editable=False)),
                ('guid', models.CharField(max_length=100, unique=True)),
                ('identifier', models.CharField(default=None, max_length=50, null=True, unique=True)),
                ('name', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('status', models.CharField(choices=[('INITIATED', 'initiated'), ('REQUESTED', 'requested'), ('CHALLENGED', 'challenged'), ('RECEIVED', 'received'), ('TRANSFERRED', 'transferred'), ('PROCESSED', 'processed'), ('COMPLETED', 'completed'), ('PREVENTED', 'prevented'), ('DENIED', 'denied'), ('HALTED', 'halted')], default='INITIATED', max_length=50)),
                ('aggregated_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('successfully_aggregated_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('metadata', django.contrib.postgres.fields.jsonb.JSONField(default=None, null=True)),
                ('is_created', models.BooleanField(default=False)),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='finance.Institution')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'members',
                'verbose_name': 'member',
                'ordering': ['user'],
            },
        ),
        migrations.CreateModel(
            name='Stat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name_plural': 'stat',
                'verbose_name': 'stat',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, editable=False)),
                ('guid', models.CharField(max_length=100, unique=True)),
                ('uid', models.CharField(max_length=50, unique=True)),
                ('amount', models.DecimalField(decimal_places=2, default=None, max_digits=10, null=True)),
                ('check_number', models.IntegerField(default=None, null=True)),
                ('check_number_string', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('category', models.CharField(default=None, max_length=255, null=True)),
                ('created_at', models.DateTimeField(default=None, null=True)),
                ('date', models.DateField(default=None, null=True)),
                ('description', models.CharField(default=None, max_length=3000, null=True)),
                ('is_bill_pay', models.NullBooleanField()),
                ('is_direct_deposit', models.NullBooleanField()),
                ('is_expense', models.NullBooleanField()),
                ('is_fee', models.NullBooleanField()),
                ('is_income', models.NullBooleanField()),
                ('is_overdraft_fee', models.NullBooleanField()),
                ('is_payroll_advance', models.NullBooleanField()),
                ('latitude', models.DecimalField(decimal_places=6, default=None, max_digits=10, null=True)),
                ('longitude', models.DecimalField(decimal_places=6, default=None, max_digits=10, null=True)),
                ('memo', models.CharField(default=None, max_length=255, null=True)),
                ('merchant_category_code', models.IntegerField(default=None, null=True)),
                ('original_description', models.CharField(default=None, max_length=3000, null=True)),
                ('posted_at', models.DateTimeField(default=None, null=True)),
                ('status', models.CharField(max_length=50)),
                ('top_level_category', models.CharField(default=None, max_length=255, null=True)),
                ('transacted_at', models.DateTimeField(default=None, null=True)),
                ('type', models.CharField(max_length=50)),
                ('updated_at', models.DateTimeField(default=None, null=True)),
                ('roundup', models.DecimalField(decimal_places=2, default=None, help_text='Internal field. "Change" amount.', max_digits=5, null=True)),
                ('is_processed', models.NullBooleanField(default=False, help_text='Internal flag. Roundup has been transferred')),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='finance.Account')),
            ],
            options={
                'verbose_name_plural': 'transactions',
                'verbose_name': 'transaction',
                'ordering': ['account', '-transacted_at'],
            },
        ),
        migrations.CreateModel(
            name='TransferDebt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('share', models.IntegerField(help_text='Current share on processing date.')),
                ('amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('processed_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('is_processed', models.BooleanField(default=False)),
                ('account', models.ForeignKey(help_text='Debt account.', on_delete=django.db.models.deletion.CASCADE, related_name='transfers_user', to='finance.Account')),
            ],
            options={
                'verbose_name_plural': 'transfers debt',
                'verbose_name': 'transfer debt',
                'ordering': ['-processed_at'],
            },
        ),
        migrations.CreateModel(
            name='TransferDonkies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dwolla_id', models.CharField(blank=True, default=None, max_length=50, null=True, unique=True)),
                ('amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('status', models.CharField(choices=[('pending', 'pending'), ('processed', 'processed'), ('cancelled', 'cancelled'), ('failed', 'failed'), ('reclaimed', 'reclaimed')], default=None, max_length=9, null=True)),
                ('created_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('initiated_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('updated_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('failure_code', models.CharField(blank=True, default=None, max_length=4, null=True)),
                ('is_initiated', models.BooleanField(default=False, help_text='Transfer initiated in Dwolla')),
                ('is_failed', models.BooleanField(default=False)),
                ('sent_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('processed_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('is_sent', models.BooleanField(default=False, help_text='Money sent to Donkies LLC')),
                ('is_processed_to_user', models.BooleanField(default=False, help_text='Funds processed to TransferUser model.')),
                ('account', models.ForeignKey(help_text='Funding source user debit account.', on_delete=django.db.models.deletion.CASCADE, related_name='transfers_donkies', to='finance.Account')),
            ],
            options={
                'verbose_name_plural': 'transfers donkies',
                'verbose_name': 'transfer donkies',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='TransferDonkiesFailed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dwolla_id', models.CharField(blank=True, default=None, max_length=50, null=True, unique=True)),
                ('amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('status', models.CharField(choices=[('pending', 'pending'), ('processed', 'processed'), ('cancelled', 'cancelled'), ('failed', 'failed'), ('reclaimed', 'reclaimed')], default=None, max_length=9, null=True)),
                ('created_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('initiated_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('updated_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('failure_code', models.CharField(blank=True, default=None, max_length=4, null=True)),
                ('is_initiated', models.BooleanField(default=False, help_text='Transfer initiated in Dwolla')),
                ('is_failed', models.BooleanField(default=False)),
                ('account', models.ForeignKey(help_text='Funding source user debit account.', on_delete=django.db.models.deletion.CASCADE, to='finance.Account')),
            ],
            options={
                'verbose_name_plural': 'transfers donkies failed',
                'verbose_name': 'transfer donkies failed',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TransferPrepare',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('roundup', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('is_processed', models.BooleanField(default=False)),
                ('account', models.ForeignKey(help_text='Debit account.', on_delete=django.db.models.deletion.CASCADE, related_name='transfers_prepare', to='finance.Account')),
            ],
            options={
                'verbose_name_plural': 'transfers prepare',
                'verbose_name': 'transfer prepare',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TransferUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cached_amount', models.DecimalField(blank=True, decimal_places=2, default=None, max_digits=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('items', models.ManyToManyField(to='finance.TransferDonkies')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transfers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'transfers user',
                'verbose_name': 'transfer user',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='transferdebt',
            name='tu',
            field=models.ForeignKey(help_text='TransferUser transfer', on_delete=django.db.models.deletion.CASCADE, to='finance.TransferUser'),
        ),
        migrations.AddField(
            model_name='account',
            name='item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='finance.Item'),
        ),
        migrations.AlterUniqueTogether(
            name='member',
            unique_together=set([('user', 'institution')]),
        ),
        migrations.AlterUniqueTogether(
            name='linkdebt',
            unique_together=set([('user', 'account')]),
        ),
    ]
